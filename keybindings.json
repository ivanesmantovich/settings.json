[
  // Movement By Words
  {
    "key": "alt+f",
    "command": "cursorWordEndRight"
  },
  {
    "key": "alt+b",
    "command": "cursorWordLeft"
  },
  // Selection By Words
  {
    "key": "alt+shift+b",
    "command": "cursorWordLeftSelect"
  },
  {
    "key": "alt+shift+f",
    "command": "cursorWordEndRightSelect"
  },
  // Selection By Lines
  {
    "key": "ctrl+shift+n",
    "command": "cursorDownSelect"
  },
  {
    "key": "ctrl+shift+p",
    "command": "cursorUpSelect"
  },
  // Delete word right
  {
    "key": "alt+d",
    "command": "deleteWordRight"
  },
  // Close editor
  // Free The Keys
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  // The Keys
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor"
  },
  // Tab switching with Ctrl-tab / Ctrl-Shift-Tab (browser-style)
  // Previous editor
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  // Next editor
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  // Quick Open
  {
    "key": "cmd+q",
    "command": "workbench.action.quickOpen"
  },
  // Find
  {
    "key": "cmd+f",
    "command": "actions.find"
  },
  // Find in all files
  {
    "key": "cmd+shift+f",
    "command": "workbench.view.search"
  },
  // Wrap in HTML tag
  {
    "key": "alt+h",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  // Expand
  {
    "key": "cmd+e",
    "command": "editor.action.smartSelect.expand"
  },
  {
    "key": "cmd+j",
    "command": "jump-extension.jump-to-the-start-of-a-word"
  },
  // Trigger suggest
  {
    "key": "alt+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // Save
  {
    "key": "cmd+s",
    "command": "workbench.action.files.save"
  },
  // toggle side Bar
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  // Definition
  {
    "key": "cmd+d",
    "command": "editor.action.revealDefinition"
  },
  // Dash
  {
    "key": "cmd+shift+d",
    "command": "extension.dash.specific"
  },
  // Git
  {
    "key": "cmd+g",
    "command": "workbench.view.scm"
  },
  // Git Graph
  {
    "key": "cmd+shift+g",
    "command": "git-graph.view"
  },
  // file tRee
  {
    "key": "cmd+r",
    "command": "workbench.view.explorer"
  },
  // Toggle Terminal
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  // Zen
  {
    "key": "cmd+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "cmd+m z",
    "command": "workbench.action.toggleZenMode"
  },
  // Find in all files (movement with Cmd-p / Cmd-n) BEGIN
  // Free The Keys
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+up",
    "command": "-search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "cmd+down",
    "command": "-search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "cmd+up",
    "command": "-search.action.focusSearchFromResults",
    "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
  },
  // The Keys
  {
    "key": "cmd+n",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "cmd+p",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "cmd+p",
    "command": "search.action.focusSearchFromResults",
    "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
  },
  // Find in all files (movement with Cmd-p / Cmd-n) END
  // Breadcrumbs BEGIN
  // Free The Keys
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "shift+cmd+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  // The Keys
  {
    "key": "shift+cmd+b",
    "command": "breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  }
  // Breadcrumbs END
]
